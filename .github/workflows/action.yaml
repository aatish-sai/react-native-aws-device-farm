name: App Testing

on: [push]

jobs:
  android:
    name: Android Testing
    runs-on: ubuntu-latest
    env:
      AWS_DEVICEFARM_PROJECT_ARN: arn:aws:devicefarm:us-west-2:504319505922:project:8ca7b4f6-ac5c-414a-a0d1-5ec9e9c7be09

    steps:
      - name: Checkout Github Repo
        uses: actions/checkout@v3
      - name: Configure AWS Credentials For Github Actions
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          mask-aws-account-id: true
      - name: Create upload link for apk
        id: create_upload
        run: |
          response=$(aws devicefarm create-upload --project-arn $AWS_DEVICEFARM_PROJECT_ARN --name application.apk --type ANDROID_APP)
          upload_arn=$(echo $response | jq '.upload.arn')
          upload_url=$(echo $response | jq '.upload.url')
          echo "upload_url=$upload_url" >> $GITHUB_OUTPUT
          echo "upload_arn=$upload_arn" >> $GITHUB_OUTPUT
      - name: Upload apk file
        run: curl -T build/application.apk ${{steps.create_upload.outputs.upload_url}}
      - name: Wait for upload to be succeed
        run: |
          chmod +x ./wait-script.sh
          ./wait-script.sh ${{ steps.create_upload.outputs.upload_arn}}
      - name: Schedule Testing
        run: |
          aws devicefarm schedule-run \
          --project-arn $AWS_DEVICEFARM_PROJECT_ARN \
          --app-arn ${{steps.create_upload.outputs.upload_arn}} \
          --test '{"type":"BUILTIN_FUZZ","parameters":{"event_count":"1"}}' \
          --device-selection-configuration '{"filters":[{"attribute":"PLATFORM","operator":"EQUALS","values":["ANDROID"]},{"attribute":"OS_VERSION","operator":"EQUALS","values":["11"]}],"maxDevices":2}' \
          --name test-commit-${{ github.workflow_sha }} 
